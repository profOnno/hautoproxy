global
        chroot /var/lib/haproxy
#       user haproxy
#       group haproxy
#       daemon
        lua-load hello.lua
	lua-load acme-http01-webroot.lua
	
	ssl-default-bind-options no-sslv3
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

	ssl-default-server-options no-sslv3
	ssl-default-server-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

	tune.ssl.default-dh-param 2048

defaults
    	timeout connect 9s
        timeout client 60s
	timeout server 30s

frontend fe_http
	log 127.0.0.1 local0 debug
        mode http
        option httplog
#       bind PUBLIC_HAPROXY_IP:80
        bind *:80

	acl url_acme_http01 path_beg /.well-known/acme-challenge/
     	http-request use-service lua.acme-http01 if METH_GET url_acme_http01

	#bind *:443 ssl crt /etc/haproxy/certs.d ciphers ECDHE-RSA-AES256-SHA:RC4-SHA:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM no-sslv3
#	bind *:443 ssl crt /etc/haproxy/certs.d
	bind *:443 ssl crt-list /etc/haproxy/cert-list.txt

	acl HAS_SSL ssl_fc
	redirect scheme https if !{ ssl_fc }
	reqadd X-Forwarderd-Proto:\ https if HAS_SSL
	
	
#       acl app_letsencrypt path_beg /.well-known/acme-challenge/
        acl is_test hdr(host) -i test.pump.ninja
        acl is_git hdr(host) -i git.kuopzi.nl
        acl is_hello hdr(host) -i hello.pump.ninja

# template
	acl is_desperate_wing hdr(host) -i desperate_wing.kuopzi.nl
	acl is_reverent_wozniak hdr(host) -i reverent_wozniak.pump.ninja

#       use_backend be_letsencrypt if app_letsencrypt
        use_backend be_test if is_test
        use_backend be_hello if is_hello
        use_backend be_git if is_git
	
# template
	use_backend be_desperate_wing if is_desperate_wing
	use_backend be_reverent_wozniak if is_reverent_wozniak

#frontend fe_https
#       log global
#       mode http
#       option httplog
#       bind 0.0.0.0:443 ssl crt /etc/haproxy/ssl/
#
#       tcp-request inspect-delay 5s
#       tcp-request content accept if { req.ssl_hello_type 1 }

backend be_letsencrypt
        log global
        mode http
        option httplog
        server srv_letsencrypt 127.0.0.1:63443

backend be_test
        mode http
	server d_test 172.17.0.3:8080

backend be_git
        mode http
	#server d_git 172.17.0.4:80
	server d_git 172.17.0.3:3000

backend be_hello
        mode http
	http-request use-service lua.hello

# template
backend be_desperate_wing
	mode http
	server server1 172.17.0.9:80
backend be_reverent_wozniak
	mode http
	server server1 172.17.0.8:80
